
debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.fastcampus.projectboard: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: uno
    password: thisisTESTpw!#%&
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    open-in-view: false
    # identity 전략이라서 osiv 꺼두신듯
    defer-datasource-initialization: true
    # 이거는 하이버네이트 실행 전에 Sql 실행할지에 대한 여부라서 일단 이게 true가 되어야할듯
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
      h2.console.enable: true
  sql.init.mode: always
  # data.sql을 초기화 시점을 테스트(embaded) 에만 할지 안할지(never) 항상할지 always
  data.rest:
    base-path: /api
    detection-strategy: annotated
  thymeleaf3.decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

spring:
  # ???? profiles.active??? ??
  config.activate.on-profile: heroku
  datasource:
    url: ${JAWSDB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa.hibernate.ddl-auto: create
  sql.init.mode: always

---

#spring:
 # config.activate.on-profile: testdb
  #datasource:
   # driver-class-name: org.h2.Driver
    # url: jdbc:h2:mem:testdb
    # sql.init.mode: always
#test.database.replace: none
# 위에있는 주석들은 h2 사용하고, 테스트마다 다른 db를 쓰려고 하는 그런 방식인듯?
  # h2에 연결해서 쓰려면 위의 mysql주석처리고 아래에 있는 거 추가하면 됨
  #url: jdbc:h2:mem:testdb
  #username: sa
  #driver-class-name: org.h2.Driver
# 그다음 localhost:8080/h2-console 연결하면 되긴 함
